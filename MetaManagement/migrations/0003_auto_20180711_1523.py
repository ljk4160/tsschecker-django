# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2018-07-11 07:23
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('MetaManagement', '0002_auto_20180711_1218'),
    ]

    operations = [
        migrations.AddField(
            model_name='signature',
            name='is_fetched',
            field=models.BooleanField(default=True, verbose_name='Blob Fetched'),
        ),
        migrations.AlterField(
            model_name='device',
            name='ecid',
            field=models.CharField(max_length=16, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator('^[A-Fa-f0-9]+$', "Enter a valid 'ECID' consisting of hex letters and numbers.", 'invalid')], verbose_name='ECID'),
        ),
        migrations.AlterField(
            model_name='device',
            name='generator',
            field=models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator('^[A-Fa-f0-9]+$', "Enter a valid 'Generator' consisting of hex letters and numbers.", 'invalid')], verbose_name='\u968f\u673a\u6570\u79cd\u5b50'),
        ),
        migrations.AlterField(
            model_name='device',
            name='hw_model',
            field=models.CharField(help_text='\u4f8b: n90ap', max_length=16, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9]+$', "Enter a valid 'HW Model' consisting of letters and numbers.", 'invalid')], verbose_name='\u5e73\u53f0'),
        ),
        migrations.AlterField(
            model_name='device',
            name='ios_build',
            field=models.CharField(blank=True, default='', help_text='\u4f8b: 15F5061e', max_length=16, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9]+$', "Enter a valid 'iOS Build' consisting of letters and numbers.", 'invalid')], verbose_name='iOS \u6784\u5efa\u7248\u672c'),
        ),
        migrations.AlterField(
            model_name='device',
            name='ios_version',
            field=models.CharField(help_text='\u4f8b: 11.4', max_length=16, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9|\\.]+$', "Enter a valid 'iOS Version' consisting of letters, numbers and dots.", 'invalid')], verbose_name='iOS \u7248\u672c'),
        ),
        migrations.AlterField(
            model_name='device',
            name='product_type',
            field=models.CharField(help_text='\u4f8b: iPhone10,3', max_length=16, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9|,]+$', "Enter a valid 'Product Type' consisting of letters, numbers and commas.", 'invalid')], verbose_name='\u578b\u53f7'),
        ),
        migrations.AlterField(
            model_name='signature',
            name='ap_nonce',
            field=models.CharField(blank=True, default='', max_length=64, validators=[django.core.validators.RegexValidator('^[A-Fa-f0-9]+$', "Enter a valid 'Blob Nonce' consisting of hex letters and numbers.", 'invalid')], verbose_name='Blob \u968f\u673a\u6570'),
        ),
        migrations.AlterField(
            model_name='signature',
            name='blob_build',
            field=models.CharField(blank=True, default='', help_text='\u4f8b: 15F5061e', max_length=16, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9]+$', "Enter a valid 'Blob Build' consisting of letters and numbers.", 'invalid')], verbose_name='Blob \u6784\u5efa\u53f7'),
        ),
        migrations.AlterField(
            model_name='signature',
            name='blob_version',
            field=models.CharField(help_text='\u4f8b: 11.4', max_length=16, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9|\\.]+$', "Enter a valid 'Blob Version' consisting of letters, numbers and dots.", 'invalid')], verbose_name='Blob \u7248\u672c'),
        ),
    ]
